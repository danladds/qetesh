/* libqetesh.h generated by valac 0.22.1, the Vala compiler, do not modify */


#ifndef __LIBQETESH_H__
#define __LIBQETESH_H__

#include <glib.h>
#include <glib-object.h>
#include <gio/gio.h>
#include <stdlib.h>
#include <string.h>
#include <gee.h>

G_BEGIN_DECLS


#define QETESH_WEBSERVER_TYPE_LIBQETESH (qetesh_webserver_libqetesh_get_type ())
#define QETESH_WEBSERVER_LIBQETESH(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_WEBSERVER_TYPE_LIBQETESH, QeteshWebserverlibqetesh))
#define QETESH_WEBSERVER_LIBQETESH_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_WEBSERVER_TYPE_LIBQETESH, QeteshWebserverlibqeteshClass))
#define QETESH_WEBSERVER_IS_LIBQETESH(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_WEBSERVER_TYPE_LIBQETESH))
#define QETESH_WEBSERVER_IS_LIBQETESH_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_WEBSERVER_TYPE_LIBQETESH))
#define QETESH_WEBSERVER_LIBQETESH_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_WEBSERVER_TYPE_LIBQETESH, QeteshWebserverlibqeteshClass))

typedef struct _QeteshWebserverlibqetesh QeteshWebserverlibqetesh;
typedef struct _QeteshWebserverlibqeteshClass QeteshWebserverlibqeteshClass;
typedef struct _QeteshWebserverlibqeteshPrivate QeteshWebserverlibqeteshPrivate;

#define QETESH_TYPE_HTTP_RESPONSE (qetesh_http_response_get_type ())
#define QETESH_HTTP_RESPONSE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_TYPE_HTTP_RESPONSE, QeteshHTTPResponse))
#define QETESH_HTTP_RESPONSE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_TYPE_HTTP_RESPONSE, QeteshHTTPResponseClass))
#define QETESH_IS_HTTP_RESPONSE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_TYPE_HTTP_RESPONSE))
#define QETESH_IS_HTTP_RESPONSE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_TYPE_HTTP_RESPONSE))
#define QETESH_HTTP_RESPONSE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_TYPE_HTTP_RESPONSE, QeteshHTTPResponseClass))

typedef struct _QeteshHTTPResponse QeteshHTTPResponse;
typedef struct _QeteshHTTPResponseClass QeteshHTTPResponseClass;
typedef struct _QeteshHTTPResponsePrivate QeteshHTTPResponsePrivate;

#define QETESH_TYPE_WEB_APP_CONTEXT (qetesh_web_app_context_get_type ())
#define QETESH_WEB_APP_CONTEXT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_TYPE_WEB_APP_CONTEXT, QeteshWebAppContext))
#define QETESH_WEB_APP_CONTEXT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_TYPE_WEB_APP_CONTEXT, QeteshWebAppContextClass))
#define QETESH_IS_WEB_APP_CONTEXT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_TYPE_WEB_APP_CONTEXT))
#define QETESH_IS_WEB_APP_CONTEXT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_TYPE_WEB_APP_CONTEXT))
#define QETESH_WEB_APP_CONTEXT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_TYPE_WEB_APP_CONTEXT, QeteshWebAppContextClass))

typedef struct _QeteshWebAppContext QeteshWebAppContext;
typedef struct _QeteshWebAppContextClass QeteshWebAppContextClass;

#define QETESH_DATA_DATA_OBJECT_TYPE_DATA_NODE (qetesh_data_data_object_data_node_get_type ())
#define QETESH_DATA_DATA_OBJECT_DATA_NODE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_DATA_DATA_OBJECT_TYPE_DATA_NODE, QeteshDataDataObjectDataNode))
#define QETESH_DATA_DATA_OBJECT_DATA_NODE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_DATA_DATA_OBJECT_TYPE_DATA_NODE, QeteshDataDataObjectDataNodeClass))
#define QETESH_DATA_DATA_OBJECT_IS_DATA_NODE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_DATA_DATA_OBJECT_TYPE_DATA_NODE))
#define QETESH_DATA_DATA_OBJECT_IS_DATA_NODE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_DATA_DATA_OBJECT_TYPE_DATA_NODE))
#define QETESH_DATA_DATA_OBJECT_DATA_NODE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_DATA_DATA_OBJECT_TYPE_DATA_NODE, QeteshDataDataObjectDataNodeClass))

typedef struct _QeteshDataDataObjectDataNode QeteshDataDataObjectDataNode;
typedef struct _QeteshDataDataObjectDataNodeClass QeteshDataDataObjectDataNodeClass;

#define QETESH_TYPE_EVENT_MANAGER (qetesh_event_manager_get_type ())
#define QETESH_EVENT_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_TYPE_EVENT_MANAGER, QeteshEventManager))
#define QETESH_EVENT_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_TYPE_EVENT_MANAGER, QeteshEventManagerClass))
#define QETESH_IS_EVENT_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_TYPE_EVENT_MANAGER))
#define QETESH_IS_EVENT_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_TYPE_EVENT_MANAGER))
#define QETESH_EVENT_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_TYPE_EVENT_MANAGER, QeteshEventManagerClass))

typedef struct _QeteshEventManager QeteshEventManager;
typedef struct _QeteshEventManagerClass QeteshEventManagerClass;
typedef struct _QeteshEventManagerPrivate QeteshEventManagerPrivate;

#define QETESH_TYPE_QEVENT (qetesh_qevent_get_type ())
#define QETESH_QEVENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_TYPE_QEVENT, QeteshQEvent))
#define QETESH_QEVENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_TYPE_QEVENT, QeteshQEventClass))
#define QETESH_IS_QEVENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_TYPE_QEVENT))
#define QETESH_IS_QEVENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_TYPE_QEVENT))
#define QETESH_QEVENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_TYPE_QEVENT, QeteshQEventClass))

typedef struct _QeteshQEvent QeteshQEvent;
typedef struct _QeteshQEventClass QeteshQEventClass;

#define QETESH_TYPE_JSON_RESPONSE (qetesh_json_response_get_type ())
#define QETESH_JSON_RESPONSE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_TYPE_JSON_RESPONSE, QeteshJSONResponse))
#define QETESH_JSON_RESPONSE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_TYPE_JSON_RESPONSE, QeteshJSONResponseClass))
#define QETESH_IS_JSON_RESPONSE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_TYPE_JSON_RESPONSE))
#define QETESH_IS_JSON_RESPONSE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_TYPE_JSON_RESPONSE))
#define QETESH_JSON_RESPONSE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_TYPE_JSON_RESPONSE, QeteshJSONResponseClass))

typedef struct _QeteshJSONResponse QeteshJSONResponse;
typedef struct _QeteshJSONResponseClass QeteshJSONResponseClass;
typedef struct _QeteshJSONResponsePrivate QeteshJSONResponsePrivate;

#define QETESH_TYPE_FILE_PARSER (qetesh_file_parser_get_type ())
#define QETESH_FILE_PARSER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_TYPE_FILE_PARSER, QeteshFileParser))
#define QETESH_IS_FILE_PARSER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_TYPE_FILE_PARSER))
#define QETESH_FILE_PARSER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), QETESH_TYPE_FILE_PARSER, QeteshFileParserIface))

typedef struct _QeteshFileParser QeteshFileParser;
typedef struct _QeteshFileParserIface QeteshFileParserIface;

#define QETESH_TYPE_ERROR_MANAGER (qetesh_error_manager_get_type ())
#define QETESH_ERROR_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_TYPE_ERROR_MANAGER, QeteshErrorManager))
#define QETESH_ERROR_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_TYPE_ERROR_MANAGER, QeteshErrorManagerClass))
#define QETESH_IS_ERROR_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_TYPE_ERROR_MANAGER))
#define QETESH_IS_ERROR_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_TYPE_ERROR_MANAGER))
#define QETESH_ERROR_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_TYPE_ERROR_MANAGER, QeteshErrorManagerClass))

typedef struct _QeteshErrorManager QeteshErrorManager;
typedef struct _QeteshErrorManagerClass QeteshErrorManagerClass;
typedef struct _QeteshErrorManagerPrivate QeteshErrorManagerPrivate;

#define QETESH_ERROR_MANAGER_TYPE_QERROR_CLASS (qetesh_error_manager_qerror_class_get_type ())

#define QETESH_TYPE_APP_MODULE (qetesh_app_module_get_type ())
#define QETESH_APP_MODULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_TYPE_APP_MODULE, QeteshAppModule))
#define QETESH_APP_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_TYPE_APP_MODULE, QeteshAppModuleClass))
#define QETESH_IS_APP_MODULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_TYPE_APP_MODULE))
#define QETESH_IS_APP_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_TYPE_APP_MODULE))
#define QETESH_APP_MODULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_TYPE_APP_MODULE, QeteshAppModuleClass))

typedef struct _QeteshAppModule QeteshAppModule;
typedef struct _QeteshAppModuleClass QeteshAppModuleClass;
typedef struct _QeteshAppModulePrivate QeteshAppModulePrivate;

#define QETESH_TYPE_WEB_SERVER_CONTEXT (qetesh_web_server_context_get_type ())
#define QETESH_WEB_SERVER_CONTEXT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_TYPE_WEB_SERVER_CONTEXT, QeteshWebServerContext))
#define QETESH_WEB_SERVER_CONTEXT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_TYPE_WEB_SERVER_CONTEXT, QeteshWebServerContextClass))
#define QETESH_IS_WEB_SERVER_CONTEXT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_TYPE_WEB_SERVER_CONTEXT))
#define QETESH_IS_WEB_SERVER_CONTEXT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_TYPE_WEB_SERVER_CONTEXT))
#define QETESH_WEB_SERVER_CONTEXT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_TYPE_WEB_SERVER_CONTEXT, QeteshWebServerContextClass))

typedef struct _QeteshWebServerContext QeteshWebServerContext;
typedef struct _QeteshWebServerContextClass QeteshWebServerContextClass;

#define QETESH_TYPE_HTTP_REQUEST (qetesh_http_request_get_type ())
#define QETESH_HTTP_REQUEST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_TYPE_HTTP_REQUEST, QeteshHTTPRequest))
#define QETESH_HTTP_REQUEST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_TYPE_HTTP_REQUEST, QeteshHTTPRequestClass))
#define QETESH_IS_HTTP_REQUEST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_TYPE_HTTP_REQUEST))
#define QETESH_IS_HTTP_REQUEST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_TYPE_HTTP_REQUEST))
#define QETESH_HTTP_REQUEST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_TYPE_HTTP_REQUEST, QeteshHTTPRequestClass))

typedef struct _QeteshHTTPRequest QeteshHTTPRequest;
typedef struct _QeteshHTTPRequestClass QeteshHTTPRequestClass;

#define QETESH_TYPE_QWEB_APP (qetesh_qweb_app_get_type ())
#define QETESH_QWEB_APP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_TYPE_QWEB_APP, QeteshQWebApp))
#define QETESH_QWEB_APP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_TYPE_QWEB_APP, QeteshQWebAppClass))
#define QETESH_IS_QWEB_APP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_TYPE_QWEB_APP))
#define QETESH_IS_QWEB_APP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_TYPE_QWEB_APP))
#define QETESH_QWEB_APP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_TYPE_QWEB_APP, QeteshQWebAppClass))

typedef struct _QeteshQWebApp QeteshQWebApp;
typedef struct _QeteshQWebAppClass QeteshQWebAppClass;

#define QETESH_DATA_TYPE_DATA_OBJECT (qetesh_data_data_object_get_type ())
#define QETESH_DATA_DATA_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_DATA_TYPE_DATA_OBJECT, QeteshDataDataObject))
#define QETESH_DATA_DATA_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_DATA_TYPE_DATA_OBJECT, QeteshDataDataObjectClass))
#define QETESH_DATA_IS_DATA_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_DATA_TYPE_DATA_OBJECT))
#define QETESH_DATA_IS_DATA_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_DATA_TYPE_DATA_OBJECT))
#define QETESH_DATA_DATA_OBJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_DATA_TYPE_DATA_OBJECT, QeteshDataDataObjectClass))

typedef struct _QeteshDataDataObject QeteshDataDataObject;
typedef struct _QeteshDataDataObjectClass QeteshDataDataObjectClass;

#define QETESH_TYPE_QPLUGIN (qetesh_qplugin_get_type ())
#define QETESH_QPLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_TYPE_QPLUGIN, QeteshQPlugin))
#define QETESH_IS_QPLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_TYPE_QPLUGIN))
#define QETESH_QPLUGIN_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), QETESH_TYPE_QPLUGIN, QeteshQPluginIface))

typedef struct _QeteshQPlugin QeteshQPlugin;
typedef struct _QeteshQPluginIface QeteshQPluginIface;

#define QETESH_TYPE_MODULE_MANAGER (qetesh_module_manager_get_type ())
#define QETESH_MODULE_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_TYPE_MODULE_MANAGER, QeteshModuleManager))
#define QETESH_MODULE_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_TYPE_MODULE_MANAGER, QeteshModuleManagerClass))
#define QETESH_IS_MODULE_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_TYPE_MODULE_MANAGER))
#define QETESH_IS_MODULE_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_TYPE_MODULE_MANAGER))
#define QETESH_MODULE_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_TYPE_MODULE_MANAGER, QeteshModuleManagerClass))

typedef struct _QeteshModuleManager QeteshModuleManager;
typedef struct _QeteshModuleManagerClass QeteshModuleManagerClass;
typedef struct _QeteshModuleManagerPrivate QeteshModuleManagerPrivate;

#define QETESH_TYPE_CONFIG_FILE (qetesh_config_file_get_type ())
#define QETESH_CONFIG_FILE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_TYPE_CONFIG_FILE, QeteshConfigFile))
#define QETESH_CONFIG_FILE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_TYPE_CONFIG_FILE, QeteshConfigFileClass))
#define QETESH_IS_CONFIG_FILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_TYPE_CONFIG_FILE))
#define QETESH_IS_CONFIG_FILE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_TYPE_CONFIG_FILE))
#define QETESH_CONFIG_FILE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_TYPE_CONFIG_FILE, QeteshConfigFileClass))

typedef struct _QeteshConfigFile QeteshConfigFile;
typedef struct _QeteshConfigFileClass QeteshConfigFileClass;
typedef struct _QeteshConfigFilePrivate QeteshConfigFilePrivate;

#define QETESH_CONFIG_FILE_TYPE_MOD_CONFIG (qetesh_config_file_mod_config_get_type ())
#define QETESH_CONFIG_FILE_MOD_CONFIG(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_CONFIG_FILE_TYPE_MOD_CONFIG, QeteshConfigFileModConfig))
#define QETESH_CONFIG_FILE_MOD_CONFIG_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_CONFIG_FILE_TYPE_MOD_CONFIG, QeteshConfigFileModConfigClass))
#define QETESH_CONFIG_FILE_IS_MOD_CONFIG(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_CONFIG_FILE_TYPE_MOD_CONFIG))
#define QETESH_CONFIG_FILE_IS_MOD_CONFIG_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_CONFIG_FILE_TYPE_MOD_CONFIG))
#define QETESH_CONFIG_FILE_MOD_CONFIG_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_CONFIG_FILE_TYPE_MOD_CONFIG, QeteshConfigFileModConfigClass))

typedef struct _QeteshConfigFileModConfig QeteshConfigFileModConfig;
typedef struct _QeteshConfigFileModConfigClass QeteshConfigFileModConfigClass;

#define QETESH_CONFIG_FILE_TYPE_DB_CONFIG (qetesh_config_file_db_config_get_type ())
#define QETESH_CONFIG_FILE_DB_CONFIG(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_CONFIG_FILE_TYPE_DB_CONFIG, QeteshConfigFileDBConfig))
#define QETESH_CONFIG_FILE_DB_CONFIG_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_CONFIG_FILE_TYPE_DB_CONFIG, QeteshConfigFileDBConfigClass))
#define QETESH_CONFIG_FILE_IS_DB_CONFIG(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_CONFIG_FILE_TYPE_DB_CONFIG))
#define QETESH_CONFIG_FILE_IS_DB_CONFIG_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_CONFIG_FILE_TYPE_DB_CONFIG))
#define QETESH_CONFIG_FILE_DB_CONFIG_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_CONFIG_FILE_TYPE_DB_CONFIG, QeteshConfigFileDBConfigClass))

typedef struct _QeteshConfigFileDBConfig QeteshConfigFileDBConfig;
typedef struct _QeteshConfigFileDBConfigClass QeteshConfigFileDBConfigClass;
typedef struct _QeteshConfigFileModConfigPrivate QeteshConfigFileModConfigPrivate;
typedef struct _QeteshConfigFileDBConfigPrivate QeteshConfigFileDBConfigPrivate;

#define QETESH_TYPE_CONFIG_FILE_PARSER (qetesh_config_file_parser_get_type ())
#define QETESH_CONFIG_FILE_PARSER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_TYPE_CONFIG_FILE_PARSER, QeteshConfigFileParser))
#define QETESH_CONFIG_FILE_PARSER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_TYPE_CONFIG_FILE_PARSER, QeteshConfigFileParserClass))
#define QETESH_IS_CONFIG_FILE_PARSER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_TYPE_CONFIG_FILE_PARSER))
#define QETESH_IS_CONFIG_FILE_PARSER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_TYPE_CONFIG_FILE_PARSER))
#define QETESH_CONFIG_FILE_PARSER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_TYPE_CONFIG_FILE_PARSER, QeteshConfigFileParserClass))

typedef struct _QeteshConfigFileParser QeteshConfigFileParser;
typedef struct _QeteshConfigFileParserClass QeteshConfigFileParserClass;
typedef struct _QeteshConfigFileParserPrivate QeteshConfigFileParserPrivate;
typedef struct _QeteshQEventPrivate QeteshQEventPrivate;
typedef struct _QeteshHTTPRequestPrivate QeteshHTTPRequestPrivate;

#define QETESH_HTTP_REQUEST_TYPE_REQUEST_METHOD (qetesh_http_request_request_method_get_type ())

#define QETESH_DATA_TYPE_DATA_MANAGER (qetesh_data_data_manager_get_type ())
#define QETESH_DATA_DATA_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_DATA_TYPE_DATA_MANAGER, QeteshDataDataManager))
#define QETESH_DATA_DATA_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_DATA_TYPE_DATA_MANAGER, QeteshDataDataManagerClass))
#define QETESH_DATA_IS_DATA_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_DATA_TYPE_DATA_MANAGER))
#define QETESH_DATA_IS_DATA_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_DATA_TYPE_DATA_MANAGER))
#define QETESH_DATA_DATA_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_DATA_TYPE_DATA_MANAGER, QeteshDataDataManagerClass))

typedef struct _QeteshDataDataManager QeteshDataDataManager;
typedef struct _QeteshDataDataManagerClass QeteshDataDataManagerClass;
typedef struct _QeteshDataDataObjectPrivate QeteshDataDataObjectPrivate;

#define QETESH_DATA_TYPE_QDATABASE_CONN (qetesh_data_qdatabase_conn_get_type ())
#define QETESH_DATA_QDATABASE_CONN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_DATA_TYPE_QDATABASE_CONN, QeteshDataQDatabaseConn))
#define QETESH_DATA_QDATABASE_CONN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_DATA_TYPE_QDATABASE_CONN, QeteshDataQDatabaseConnClass))
#define QETESH_DATA_IS_QDATABASE_CONN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_DATA_TYPE_QDATABASE_CONN))
#define QETESH_DATA_IS_QDATABASE_CONN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_DATA_TYPE_QDATABASE_CONN))
#define QETESH_DATA_QDATABASE_CONN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_DATA_TYPE_QDATABASE_CONN, QeteshDataQDatabaseConnClass))

typedef struct _QeteshDataQDatabaseConn QeteshDataQDatabaseConn;
typedef struct _QeteshDataQDatabaseConnClass QeteshDataQDatabaseConnClass;

#define QETESH_TYPE_QWEB_NODE (qetesh_qweb_node_get_type ())
#define QETESH_QWEB_NODE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_TYPE_QWEB_NODE, QeteshQWebNode))
#define QETESH_QWEB_NODE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_TYPE_QWEB_NODE, QeteshQWebNodeClass))
#define QETESH_IS_QWEB_NODE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_TYPE_QWEB_NODE))
#define QETESH_IS_QWEB_NODE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_TYPE_QWEB_NODE))
#define QETESH_QWEB_NODE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_TYPE_QWEB_NODE, QeteshQWebNodeClass))

typedef struct _QeteshQWebNode QeteshQWebNode;
typedef struct _QeteshQWebNodeClass QeteshQWebNodeClass;
typedef struct _QeteshQWebNodePrivate QeteshQWebNodePrivate;

#define QETESH_QWEB_NODE_TYPE_MANIFEST_OBJECT (qetesh_qweb_node_manifest_object_get_type ())
#define QETESH_QWEB_NODE_MANIFEST_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_QWEB_NODE_TYPE_MANIFEST_OBJECT, QeteshQWebNodeManifestObject))
#define QETESH_QWEB_NODE_MANIFEST_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_QWEB_NODE_TYPE_MANIFEST_OBJECT, QeteshQWebNodeManifestObjectClass))
#define QETESH_QWEB_NODE_IS_MANIFEST_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_QWEB_NODE_TYPE_MANIFEST_OBJECT))
#define QETESH_QWEB_NODE_IS_MANIFEST_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_QWEB_NODE_TYPE_MANIFEST_OBJECT))
#define QETESH_QWEB_NODE_MANIFEST_OBJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_QWEB_NODE_TYPE_MANIFEST_OBJECT, QeteshQWebNodeManifestObjectClass))

typedef struct _QeteshQWebNodeManifestObject QeteshQWebNodeManifestObject;
typedef struct _QeteshQWebNodeManifestObjectClass QeteshQWebNodeManifestObjectClass;

#define QETESH_DATA_DATA_OBJECT_TYPE_LAZY_NODE (qetesh_data_data_object_lazy_node_get_type ())
#define QETESH_DATA_DATA_OBJECT_LAZY_NODE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_DATA_DATA_OBJECT_TYPE_LAZY_NODE, QeteshDataDataObjectLazyNode))
#define QETESH_DATA_DATA_OBJECT_LAZY_NODE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_DATA_DATA_OBJECT_TYPE_LAZY_NODE, QeteshDataDataObjectLazyNodeClass))
#define QETESH_DATA_DATA_OBJECT_IS_LAZY_NODE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_DATA_DATA_OBJECT_TYPE_LAZY_NODE))
#define QETESH_DATA_DATA_OBJECT_IS_LAZY_NODE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_DATA_DATA_OBJECT_TYPE_LAZY_NODE))
#define QETESH_DATA_DATA_OBJECT_LAZY_NODE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_DATA_DATA_OBJECT_TYPE_LAZY_NODE, QeteshDataDataObjectLazyNodeClass))

typedef struct _QeteshDataDataObjectLazyNode QeteshDataDataObjectLazyNode;
typedef struct _QeteshDataDataObjectLazyNodeClass QeteshDataDataObjectLazyNodeClass;
typedef struct _QeteshDataDataObjectLazyNodePrivate QeteshDataDataObjectLazyNodePrivate;
typedef struct _QeteshDataDataObjectDataNodePrivate QeteshDataDataObjectDataNodePrivate;

#define QETESH_DATA_DATA_OBJECT_TYPE_INHERIT_INFO (qetesh_data_data_object_inherit_info_get_type ())
#define QETESH_DATA_DATA_OBJECT_INHERIT_INFO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_DATA_DATA_OBJECT_TYPE_INHERIT_INFO, QeteshDataDataObjectInheritInfo))
#define QETESH_DATA_DATA_OBJECT_INHERIT_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_DATA_DATA_OBJECT_TYPE_INHERIT_INFO, QeteshDataDataObjectInheritInfoClass))
#define QETESH_DATA_DATA_OBJECT_IS_INHERIT_INFO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_DATA_DATA_OBJECT_TYPE_INHERIT_INFO))
#define QETESH_DATA_DATA_OBJECT_IS_INHERIT_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_DATA_DATA_OBJECT_TYPE_INHERIT_INFO))
#define QETESH_DATA_DATA_OBJECT_INHERIT_INFO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_DATA_DATA_OBJECT_TYPE_INHERIT_INFO, QeteshDataDataObjectInheritInfoClass))

typedef struct _QeteshDataDataObjectInheritInfo QeteshDataDataObjectInheritInfo;
typedef struct _QeteshDataDataObjectInheritInfoClass QeteshDataDataObjectInheritInfoClass;
typedef struct _QeteshDataDataObjectInheritInfoPrivate QeteshDataDataObjectInheritInfoPrivate;

#define QETESH_DATA_DATA_OBJECT_INHERIT_INFO_TYPE_LINK_JOIN_TYPE (qetesh_data_data_object_inherit_info_link_join_type_get_type ())

#define QETESH_DATA_TYPE_DB_MANAGER (qetesh_data_db_manager_get_type ())
#define QETESH_DATA_DB_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_DATA_TYPE_DB_MANAGER, QeteshDataDBManager))
#define QETESH_DATA_DB_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_DATA_TYPE_DB_MANAGER, QeteshDataDBManagerClass))
#define QETESH_DATA_IS_DB_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_DATA_TYPE_DB_MANAGER))
#define QETESH_DATA_IS_DB_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_DATA_TYPE_DB_MANAGER))
#define QETESH_DATA_DB_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_DATA_TYPE_DB_MANAGER, QeteshDataDBManagerClass))

typedef struct _QeteshDataDBManager QeteshDataDBManager;
typedef struct _QeteshDataDBManagerClass QeteshDataDBManagerClass;
typedef struct _QeteshDataDBManagerPrivate QeteshDataDBManagerPrivate;

#define QETESH_DATA_TYPE_QDATABASE (qetesh_data_qdatabase_get_type ())
#define QETESH_DATA_QDATABASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_DATA_TYPE_QDATABASE, QeteshDataQDatabase))
#define QETESH_DATA_QDATABASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_DATA_TYPE_QDATABASE, QeteshDataQDatabaseClass))
#define QETESH_DATA_IS_QDATABASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_DATA_TYPE_QDATABASE))
#define QETESH_DATA_IS_QDATABASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_DATA_TYPE_QDATABASE))
#define QETESH_DATA_QDATABASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_DATA_TYPE_QDATABASE, QeteshDataQDatabaseClass))

typedef struct _QeteshDataQDatabase QeteshDataQDatabase;
typedef struct _QeteshDataQDatabaseClass QeteshDataQDatabaseClass;
typedef struct _QeteshDataQDatabasePrivate QeteshDataQDatabasePrivate;

#define QETESH_DATA_TYPE_QMYSQL_DB (qetesh_data_qmysql_db_get_type ())
#define QETESH_DATA_QMYSQL_DB(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_DATA_TYPE_QMYSQL_DB, QeteshDataQMysqlDB))
#define QETESH_DATA_QMYSQL_DB_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_DATA_TYPE_QMYSQL_DB, QeteshDataQMysqlDBClass))
#define QETESH_DATA_IS_QMYSQL_DB(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_DATA_TYPE_QMYSQL_DB))
#define QETESH_DATA_IS_QMYSQL_DB_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_DATA_TYPE_QMYSQL_DB))
#define QETESH_DATA_QMYSQL_DB_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_DATA_TYPE_QMYSQL_DB, QeteshDataQMysqlDBClass))

typedef struct _QeteshDataQMysqlDB QeteshDataQMysqlDB;
typedef struct _QeteshDataQMysqlDBClass QeteshDataQMysqlDBClass;
typedef struct _QeteshDataQMysqlDBPrivate QeteshDataQMysqlDBPrivate;
typedef struct _QeteshDataQDatabaseConnPrivate QeteshDataQDatabaseConnPrivate;
typedef struct _QeteshDataDataManagerPrivate QeteshDataDataManagerPrivate;
typedef struct _QeteshWebServerContextPrivate QeteshWebServerContextPrivate;
typedef struct _QeteshWebAppContextPrivate QeteshWebAppContextPrivate;
typedef struct _QeteshQWebAppPrivate QeteshQWebAppPrivate;

#define QETESH_TYPE_HTML_ELEMENT (qetesh_html_element_get_type ())
#define QETESH_HTML_ELEMENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_TYPE_HTML_ELEMENT, QeteshHTMLElement))
#define QETESH_HTML_ELEMENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_TYPE_HTML_ELEMENT, QeteshHTMLElementClass))
#define QETESH_IS_HTML_ELEMENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_TYPE_HTML_ELEMENT))
#define QETESH_IS_HTML_ELEMENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_TYPE_HTML_ELEMENT))
#define QETESH_HTML_ELEMENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_TYPE_HTML_ELEMENT, QeteshHTMLElementClass))

typedef struct _QeteshHTMLElement QeteshHTMLElement;
typedef struct _QeteshHTMLElementClass QeteshHTMLElementClass;
typedef struct _QeteshHTMLElementPrivate QeteshHTMLElementPrivate;

#define QETESH_QWEB_NODE_TYPE_LAZY_EXPOSER (qetesh_qweb_node_lazy_exposer_get_type ())
#define QETESH_QWEB_NODE_LAZY_EXPOSER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_QWEB_NODE_TYPE_LAZY_EXPOSER, QeteshQWebNodeLazyExposer))
#define QETESH_QWEB_NODE_LAZY_EXPOSER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_QWEB_NODE_TYPE_LAZY_EXPOSER, QeteshQWebNodeLazyExposerClass))
#define QETESH_QWEB_NODE_IS_LAZY_EXPOSER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_QWEB_NODE_TYPE_LAZY_EXPOSER))
#define QETESH_QWEB_NODE_IS_LAZY_EXPOSER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_QWEB_NODE_TYPE_LAZY_EXPOSER))
#define QETESH_QWEB_NODE_LAZY_EXPOSER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_QWEB_NODE_TYPE_LAZY_EXPOSER, QeteshQWebNodeLazyExposerClass))

typedef struct _QeteshQWebNodeLazyExposer QeteshQWebNodeLazyExposer;
typedef struct _QeteshQWebNodeLazyExposerClass QeteshQWebNodeLazyExposerClass;

#define QETESH_QWEB_NODE_TYPE_MANIFEST_WALKER (qetesh_qweb_node_manifest_walker_get_type ())
#define QETESH_QWEB_NODE_MANIFEST_WALKER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_QWEB_NODE_TYPE_MANIFEST_WALKER, QeteshQWebNodeManifestWalker))
#define QETESH_QWEB_NODE_MANIFEST_WALKER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_QWEB_NODE_TYPE_MANIFEST_WALKER, QeteshQWebNodeManifestWalkerClass))
#define QETESH_QWEB_NODE_IS_MANIFEST_WALKER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_QWEB_NODE_TYPE_MANIFEST_WALKER))
#define QETESH_QWEB_NODE_IS_MANIFEST_WALKER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_QWEB_NODE_TYPE_MANIFEST_WALKER))
#define QETESH_QWEB_NODE_MANIFEST_WALKER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_QWEB_NODE_TYPE_MANIFEST_WALKER, QeteshQWebNodeManifestWalkerClass))

typedef struct _QeteshQWebNodeManifestWalker QeteshQWebNodeManifestWalker;
typedef struct _QeteshQWebNodeManifestWalkerClass QeteshQWebNodeManifestWalkerClass;
typedef struct _QeteshQWebNodeLazyExposerPrivate QeteshQWebNodeLazyExposerPrivate;
typedef struct _QeteshQWebNodeManifestWalkerPrivate QeteshQWebNodeManifestWalkerPrivate;
typedef struct _QeteshQWebNodeManifestObjectPrivate QeteshQWebNodeManifestObjectPrivate;

#define QETESH_QWEB_NODE_MANIFEST_OBJECT_TYPE_MANIFEST_METHOD (qetesh_qweb_node_manifest_object_manifest_method_get_type ())
#define QETESH_QWEB_NODE_MANIFEST_OBJECT_MANIFEST_METHOD(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_QWEB_NODE_MANIFEST_OBJECT_TYPE_MANIFEST_METHOD, QeteshQWebNodeManifestObjectManifestMethod))
#define QETESH_QWEB_NODE_MANIFEST_OBJECT_MANIFEST_METHOD_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_QWEB_NODE_MANIFEST_OBJECT_TYPE_MANIFEST_METHOD, QeteshQWebNodeManifestObjectManifestMethodClass))
#define QETESH_QWEB_NODE_MANIFEST_OBJECT_IS_MANIFEST_METHOD(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_QWEB_NODE_MANIFEST_OBJECT_TYPE_MANIFEST_METHOD))
#define QETESH_QWEB_NODE_MANIFEST_OBJECT_IS_MANIFEST_METHOD_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_QWEB_NODE_MANIFEST_OBJECT_TYPE_MANIFEST_METHOD))
#define QETESH_QWEB_NODE_MANIFEST_OBJECT_MANIFEST_METHOD_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_QWEB_NODE_MANIFEST_OBJECT_TYPE_MANIFEST_METHOD, QeteshQWebNodeManifestObjectManifestMethodClass))

typedef struct _QeteshQWebNodeManifestObjectManifestMethod QeteshQWebNodeManifestObjectManifestMethod;
typedef struct _QeteshQWebNodeManifestObjectManifestMethodClass QeteshQWebNodeManifestObjectManifestMethodClass;
typedef struct _QeteshQWebNodeManifestObjectManifestMethodPrivate QeteshQWebNodeManifestObjectManifestMethodPrivate;

#define QETESH_TYPE_QMANIFEST (qetesh_qmanifest_get_type ())
#define QETESH_QMANIFEST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_TYPE_QMANIFEST, QeteshQManifest))
#define QETESH_QMANIFEST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_TYPE_QMANIFEST, QeteshQManifestClass))
#define QETESH_IS_QMANIFEST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_TYPE_QMANIFEST))
#define QETESH_IS_QMANIFEST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_TYPE_QMANIFEST))
#define QETESH_QMANIFEST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_TYPE_QMANIFEST, QeteshQManifestClass))

typedef struct _QeteshQManifest QeteshQManifest;
typedef struct _QeteshQManifestClass QeteshQManifestClass;
typedef struct _QeteshQManifestPrivate QeteshQManifestPrivate;

#define QETESH_TYPE_QDATE_TIME (qetesh_qdate_time_get_type ())
#define QETESH_QDATE_TIME(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), QETESH_TYPE_QDATE_TIME, QeteshQDateTime))
#define QETESH_QDATE_TIME_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), QETESH_TYPE_QDATE_TIME, QeteshQDateTimeClass))
#define QETESH_IS_QDATE_TIME(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), QETESH_TYPE_QDATE_TIME))
#define QETESH_IS_QDATE_TIME_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), QETESH_TYPE_QDATE_TIME))
#define QETESH_QDATE_TIME_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), QETESH_TYPE_QDATE_TIME, QeteshQDateTimeClass))

typedef struct _QeteshQDateTime QeteshQDateTime;
typedef struct _QeteshQDateTimeClass QeteshQDateTimeClass;
typedef struct _QeteshQDateTimePrivate QeteshQDateTimePrivate;

struct _QeteshWebserverlibqetesh {
	GTypeInstance parent_instance;
	volatile int ref_count;
	QeteshWebserverlibqeteshPrivate * priv;
};

struct _QeteshWebserverlibqeteshClass {
	GTypeClass parent_class;
	void (*finalize) (QeteshWebserverlibqetesh *self);
};

struct _QeteshHTTPResponse {
	GObject parent_instance;
	QeteshHTTPResponsePrivate * priv;
	GString* Content;
};

struct _QeteshHTTPResponseClass {
	GObjectClass parent_class;
	void (*Respond) (QeteshHTTPResponse* self, GDataOutputStream* httpOut);
	void (*ComposeContent) (QeteshHTTPResponse* self);
};

struct _QeteshEventManager {
	GObject parent_instance;
	QeteshEventManagerPrivate * priv;
};

struct _QeteshEventManagerClass {
	GObjectClass parent_class;
};

struct _QeteshJSONResponse {
	QeteshHTTPResponse parent_instance;
	QeteshJSONResponsePrivate * priv;
};

struct _QeteshJSONResponseClass {
	QeteshHTTPResponseClass parent_class;
};

struct _QeteshFileParserIface {
	GTypeInterface parent_iface;
};

struct _QeteshErrorManager {
	GObject parent_instance;
	QeteshErrorManagerPrivate * priv;
};

struct _QeteshErrorManagerClass {
	GObjectClass parent_class;
};

typedef enum  {
	QETESH_ERROR_MANAGER_QERROR_CLASS_QETESH_ERROR,
	QETESH_ERROR_MANAGER_QERROR_CLASS_QETESH_CRITICAL,
	QETESH_ERROR_MANAGER_QERROR_CLASS_QETESH_DEBUG,
	QETESH_ERROR_MANAGER_QERROR_CLASS_QETESH_WARNING,
	QETESH_ERROR_MANAGER_QERROR_CLASS_QETESH_INTERNAL,
	QETESH_ERROR_MANAGER_QERROR_CLASS_MODULE_ERROR,
	QETESH_ERROR_MANAGER_QERROR_CLASS_MODULE_CRITICAL,
	QETESH_ERROR_MANAGER_QERROR_CLASS_MODULE_DEBUG,
	QETESH_ERROR_MANAGER_QERROR_CLASS_MODULE_WARNING
} QeteshErrorManagerQErrorClass;

struct _QeteshAppModule {
	GObject parent_instance;
	QeteshAppModulePrivate * priv;
};

struct _QeteshAppModuleClass {
	GObjectClass parent_class;
};

typedef enum  {
	QETESH_ERRORS_QMODULE_ERROR_LOAD,
	QETESH_ERRORS_QMODULE_ERROR_CONFIG,
	QETESH_ERRORS_QMODULE_ERROR_STRUCTURE
} QeteshErrorsQModuleError;
#define QETESH_ERRORS_QMODULE_ERROR qetesh_errors_qmodule_error_quark ()
struct _QeteshQPluginIface {
	GTypeInterface parent_iface;
	QeteshQWebApp* (*GetModObject) (QeteshQPlugin* self, QeteshWebAppContext* ctx);
};

struct _QeteshModuleManager {
	GObject parent_instance;
	QeteshModuleManagerPrivate * priv;
};

struct _QeteshModuleManagerClass {
	GObjectClass parent_class;
};

struct _QeteshConfigFile {
	GObject parent_instance;
	QeteshConfigFilePrivate * priv;
	gchar* dirPath;
};

struct _QeteshConfigFileClass {
	GObjectClass parent_class;
};

struct _QeteshConfigFileModConfig {
	GTypeInstance parent_instance;
	volatile int ref_count;
	QeteshConfigFileModConfigPrivate * priv;
	gchar* LibPath;
	gchar* LoaderName;
	gchar* Nick;
	GeeLinkedList* Hosts;
	gint ExecUser;
	gint ExecGroup;
};

struct _QeteshConfigFileModConfigClass {
	GTypeClass parent_class;
	void (*finalize) (QeteshConfigFileModConfig *self);
};

struct _QeteshConfigFileDBConfig {
	GTypeInstance parent_instance;
	volatile int ref_count;
	QeteshConfigFileDBConfigPrivate * priv;
	GeeLinkedList* AllowedTypes;
	gchar* Connector;
	gchar* Host;
	guint16 Port;
	gchar* Username;
	gchar* Password;
	gchar* DBName;
	gchar* Nick;
};

struct _QeteshConfigFileDBConfigClass {
	GTypeClass parent_class;
	void (*finalize) (QeteshConfigFileDBConfig *self);
};

struct _QeteshConfigFileParser {
	GObject parent_instance;
	QeteshConfigFileParserPrivate * priv;
};

struct _QeteshConfigFileParserClass {
	GObjectClass parent_class;
};

typedef enum  {
	QETESH_ERRORS_QERROR_UNSPECIFIED
} QeteshErrorsQError;
#define QETESH_ERRORS_QERROR qetesh_errors_qerror_quark ()
typedef enum  {
	QETESH_ERRORS_QFILE_ERROR_ACCESS,
	QETESH_ERRORS_QFILE_ERROR_READ,
	QETESH_ERRORS_QFILE_ERROR_WRITE,
	QETESH_ERRORS_QFILE_ERROR_FORMAT
} QeteshErrorsQFileError;
#define QETESH_ERRORS_QFILE_ERROR qetesh_errors_qfile_error_quark ()
typedef enum  {
	QETESH_ERRORS_QSANITY_ERROR_UNSPECIFIED
} QeteshErrorsQSanityError;
#define QETESH_ERRORS_QSANITY_ERROR qetesh_errors_qsanity_error_quark ()
struct _QeteshQEvent {
	GTypeInstance parent_instance;
	volatile int ref_count;
	QeteshQEventPrivate * priv;
};

struct _QeteshQEventClass {
	GTypeClass parent_class;
	void (*finalize) (QeteshQEvent *self);
};

struct _QeteshHTTPRequest {
	GObject parent_instance;
	QeteshHTTPRequestPrivate * priv;
};

struct _QeteshHTTPRequestClass {
	GObjectClass parent_class;
};

typedef enum  {
	QETESH_HTTP_REQUEST_REQUEST_METHOD_GET,
	QETESH_HTTP_REQUEST_REQUEST_METHOD_POST,
	QETESH_HTTP_REQUEST_REQUEST_METHOD_PUT,
	QETESH_HTTP_REQUEST_REQUEST_METHOD_HEAD,
	QETESH_HTTP_REQUEST_REQUEST_METHOD_INVALID
} QeteshHTTPRequestRequestMethod;

struct _QeteshDataDataObject {
	GObject parent_instance;
	QeteshDataDataObjectPrivate * priv;
};

struct _QeteshDataDataObjectClass {
	GObjectClass parent_class;
	void (*Init) (QeteshDataDataObject* self);
	gchar* (*NameTransform) (QeteshDataDataObject* self, const gchar* fieldName);
};

typedef enum  {
	QETESH_DATA_QDB_ERROR_CONNECT,
	QETESH_DATA_QDB_ERROR_QUERY
} QeteshDataQDBError;
#define QETESH_DATA_QDB_ERROR qetesh_data_qdb_error_quark ()
typedef void (*QeteshDataDataObjectDataNodeTransform) (QeteshDataDataObjectDataNode* n, void* user_data);
struct _QeteshQWebNode {
	GObject parent_instance;
	QeteshQWebNodePrivate * priv;
	GeeMap* Children;
	QeteshQWebNode* Parent;
	QeteshQWebNodeManifestObject* Manifest;
};

struct _QeteshQWebNodeClass {
	GObjectClass parent_class;
	void (*OnBind) (QeteshQWebNode* self);
};

struct _QeteshDataDataObjectLazyNode {
	QeteshQWebNode parent_instance;
	QeteshDataDataObjectLazyNodePrivate * priv;
};

struct _QeteshDataDataObjectLazyNodeClass {
	QeteshQWebNodeClass parent_class;
};

struct _QeteshDataDataObjectDataNode {
	GTypeInstance parent_instance;
	volatile int ref_count;
	QeteshDataDataObjectDataNodePrivate * priv;
};

struct _QeteshDataDataObjectDataNodeClass {
	GTypeClass parent_class;
	void (*finalize) (QeteshDataDataObjectDataNode *self);
};

struct _QeteshDataDataObjectInheritInfo {
	GTypeInstance parent_instance;
	volatile int ref_count;
	QeteshDataDataObjectInheritInfoPrivate * priv;
};

struct _QeteshDataDataObjectInheritInfoClass {
	GTypeClass parent_class;
	void (*finalize) (QeteshDataDataObjectInheritInfo *self);
};

typedef enum  {
	QETESH_DATA_DATA_OBJECT_INHERIT_INFO_LINK_JOIN_TYPE_LEFT,
	QETESH_DATA_DATA_OBJECT_INHERIT_INFO_LINK_JOIN_TYPE_INNER,
	QETESH_DATA_DATA_OBJECT_INHERIT_INFO_LINK_JOIN_TYPE_OUTER,
	QETESH_DATA_DATA_OBJECT_INHERIT_INFO_LINK_JOIN_TYPE_RIGHT
} QeteshDataDataObjectInheritInfoLinkJoinType;

struct _QeteshDataDBManager {
	GObject parent_instance;
	QeteshDataDBManagerPrivate * priv;
};

struct _QeteshDataDBManagerClass {
	GObjectClass parent_class;
};

struct _QeteshDataQDatabase {
	GObject parent_instance;
	QeteshDataQDatabasePrivate * priv;
};

struct _QeteshDataQDatabaseClass {
	GObjectClass parent_class;
	QeteshDataQDatabaseConn* (*Connect) (QeteshDataQDatabase* self, GError** error);
};

struct _QeteshDataQMysqlDB {
	QeteshDataQDatabase parent_instance;
	QeteshDataQMysqlDBPrivate * priv;
};

struct _QeteshDataQMysqlDBClass {
	QeteshDataQDatabaseClass parent_class;
};

struct _QeteshDataQDatabaseConn {
	GTypeInstance parent_instance;
	volatile int ref_count;
	QeteshDataQDatabaseConnPrivate * priv;
};

struct _QeteshDataQDatabaseConnClass {
	GTypeClass parent_class;
	void (*finalize) (QeteshDataQDatabaseConn *self);
	GeeLinkedList* (*Q) (QeteshDataQDatabaseConn* self, const gchar* qText, GError** error);
	void (*Connect) (QeteshDataQDatabaseConn* self, GError** error);
};

struct _QeteshDataDataManager {
	GObject parent_instance;
	QeteshDataDataManagerPrivate * priv;
};

struct _QeteshDataDataManagerClass {
	GObjectClass parent_class;
};

struct _QeteshWebServerContext {
	GObject parent_instance;
	QeteshWebServerContextPrivate * priv;
	QeteshErrorManager* Err;
	QeteshDataDBManager* Databases;
	QeteshModuleManager* Modules;
	QeteshConfigFile* Configuration;
};

struct _QeteshWebServerContextClass {
	GObjectClass parent_class;
};

struct _QeteshWebAppContext {
	GObject parent_instance;
	QeteshWebAppContextPrivate * priv;
};

struct _QeteshWebAppContextClass {
	GObjectClass parent_class;
};

struct _QeteshQWebApp {
	GObject parent_instance;
	QeteshQWebAppPrivate * priv;
	QeteshQWebNode* RootNode;
	QeteshWebAppContext* appContext;
};

struct _QeteshQWebAppClass {
	GObjectClass parent_class;
};

struct _QeteshHTMLElement {
	GObject parent_instance;
	QeteshHTMLElementPrivate * priv;
};

struct _QeteshHTMLElementClass {
	GObjectClass parent_class;
};

typedef void (*QeteshHTMLElementPropogateCallback) (QeteshDataDataObject* datum, QeteshHTMLElement* elem, void* user_data);
struct _QeteshQWebNodeLazyExposer {
	GTypeInstance parent_instance;
	volatile int ref_count;
	QeteshQWebNodeLazyExposerPrivate * priv;
};

struct _QeteshQWebNodeLazyExposerClass {
	GTypeClass parent_class;
	void (*finalize) (QeteshQWebNodeLazyExposer *self);
};

struct _QeteshQWebNodeManifestWalker {
	GTypeInstance parent_instance;
	volatile int ref_count;
	QeteshQWebNodeManifestWalkerPrivate * priv;
};

struct _QeteshQWebNodeManifestWalkerClass {
	GTypeClass parent_class;
	void (*finalize) (QeteshQWebNodeManifestWalker *self);
};

struct _QeteshQWebNodeManifestObject {
	GTypeInstance parent_instance;
	volatile int ref_count;
	QeteshQWebNodeManifestObjectPrivate * priv;
	GeeLinkedList* Methods;
};

struct _QeteshQWebNodeManifestObjectClass {
	GTypeClass parent_class;
	void (*finalize) (QeteshQWebNodeManifestObject *self);
};

struct _QeteshQWebNodeManifestObjectManifestMethod {
	GTypeInstance parent_instance;
	volatile int ref_count;
	QeteshQWebNodeManifestObjectManifestMethodPrivate * priv;
};

struct _QeteshQWebNodeManifestObjectManifestMethodClass {
	GTypeClass parent_class;
	void (*finalize) (QeteshQWebNodeManifestObjectManifestMethod *self);
};

struct _QeteshQManifest {
	QeteshQWebNode parent_instance;
	QeteshQManifestPrivate * priv;
};

struct _QeteshQManifestClass {
	QeteshQWebNodeClass parent_class;
};

struct _QeteshQDateTime {
	GObject parent_instance;
	QeteshQDateTimePrivate * priv;
};

struct _QeteshQDateTimeClass {
	GObjectClass parent_class;
};


gpointer qetesh_webserver_libqetesh_ref (gpointer instance);
void qetesh_webserver_libqetesh_unref (gpointer instance);
GParamSpec* qetesh_webserver_param_spec_libqetesh (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void qetesh_webserver_value_set_libqetesh (GValue* value, gpointer v_object);
void qetesh_webserver_value_take_libqetesh (GValue* value, gpointer v_object);
gpointer qetesh_webserver_value_get_libqetesh (const GValue* value);
GType qetesh_webserver_libqetesh_get_type (void) G_GNUC_CONST;
QeteshWebserverlibqetesh* qetesh_webserver_libqetesh_new (void);
QeteshWebserverlibqetesh* qetesh_webserver_libqetesh_construct (GType object_type);
GType qetesh_http_response_get_type (void) G_GNUC_CONST;
#define QETESH_HTTP_RESPONSE_DEFAULT_CODE 200
#define QETESH_HTTP_RESPONSE_DEFAULT_CT "text/html"
GType qetesh_web_app_context_get_type (void) G_GNUC_CONST;
QeteshHTTPResponse* qetesh_http_response_construct (GType object_type, QeteshWebAppContext* ctx);
void qetesh_http_response_Respond (QeteshHTTPResponse* self, GDataOutputStream* httpOut);
void qetesh_http_response_ComposeContent (QeteshHTTPResponse* self);
gint qetesh_http_response_get_ResponseCode (QeteshHTTPResponse* self);
void qetesh_http_response_set_ResponseCode (QeteshHTTPResponse* self, gint value);
const gchar* qetesh_http_response_get_ResponseMessage (QeteshHTTPResponse* self);
void qetesh_http_response_set_ResponseMessage (QeteshHTTPResponse* self, const gchar* value);
const gchar* qetesh_http_response_get_ContentType (QeteshHTTPResponse* self);
void qetesh_http_response_set_ContentType (QeteshHTTPResponse* self, const gchar* value);
QeteshWebAppContext* qetesh_http_response_get_Context (QeteshHTTPResponse* self);
gpointer qetesh_data_data_object_data_node_ref (gpointer instance);
void qetesh_data_data_object_data_node_unref (gpointer instance);
GParamSpec* qetesh_data_data_object_param_spec_data_node (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void qetesh_data_data_object_value_set_data_node (GValue* value, gpointer v_object);
void qetesh_data_data_object_value_take_data_node (GValue* value, gpointer v_object);
gpointer qetesh_data_data_object_value_get_data_node (const GValue* value);
GType qetesh_data_data_object_data_node_get_type (void) G_GNUC_CONST;
QeteshDataDataObjectDataNode* qetesh_http_response_get_DataTree (QeteshHTTPResponse* self);
GeeLinkedList* qetesh_http_response_get_Messages (QeteshHTTPResponse* self);
GType qetesh_event_manager_get_type (void) G_GNUC_CONST;
gchar* qetesh_event_manager_GetEventCode (QeteshEventManager* self);
gpointer qetesh_qevent_ref (gpointer instance);
void qetesh_qevent_unref (gpointer instance);
GParamSpec* qetesh_param_spec_qevent (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void qetesh_value_set_qevent (GValue* value, gpointer v_object);
void qetesh_value_take_qevent (GValue* value, gpointer v_object);
gpointer qetesh_value_get_qevent (const GValue* value);
GType qetesh_qevent_get_type (void) G_GNUC_CONST;
void qetesh_event_manager_RegisterEvent (QeteshEventManager* self, QeteshQEvent* ev, const gchar* clientId);
void qetesh_event_manager_CallEvents (QeteshEventManager* self, const gchar* clientId);
GType qetesh_json_response_get_type (void) G_GNUC_CONST;
QeteshJSONResponse* qetesh_json_response_new (QeteshWebAppContext* ctx);
QeteshJSONResponse* qetesh_json_response_construct (GType object_type, QeteshWebAppContext* ctx);
void qetesh_json_response_Tab (QeteshJSONResponse* self);
void qetesh_json_response_AddJson (QeteshJSONResponse* self, QeteshDataDataObjectDataNode* node, gboolean parentIsArray);
GType qetesh_file_parser_get_type (void) G_GNUC_CONST;
void qetesh_file_parser_ReadInto (QeteshFileParser* self, gconstpointer obj);
GType qetesh_error_manager_get_type (void) G_GNUC_CONST;
GType qetesh_error_manager_qerror_class_get_type (void) G_GNUC_CONST;
gchar* qetesh_error_manager_qerror_class_to_string (QeteshErrorManagerQErrorClass self);
QeteshErrorManager* qetesh_error_manager_new (void);
QeteshErrorManager* qetesh_error_manager_construct (GType object_type);
void qetesh_error_manager_AddErrorStream (QeteshErrorManager* self, GDataOutputStream* outStr);
void qetesh_error_manager_AddErrorFile (QeteshErrorManager* self, const gchar* path);
void qetesh_error_manager_WriteMessage (QeteshErrorManager* self, const gchar* message, QeteshErrorManagerQErrorClass errorClass, const gchar* modName);
gboolean qetesh_error_manager_get_ErrToConsole (QeteshErrorManager* self);
void qetesh_error_manager_set_ErrToConsole (QeteshErrorManager* self, gboolean value);
GType qetesh_app_module_get_type (void) G_GNUC_CONST;
GType qetesh_web_server_context_get_type (void) G_GNUC_CONST;
GQuark qetesh_errors_qmodule_error_quark (void);
QeteshAppModule* qetesh_app_module_new (const gchar* modPath, const gchar* nick, const gchar* loader, QeteshWebServerContext* sc, gint execUser, gint execGroup, GError** error);
QeteshAppModule* qetesh_app_module_construct (GType object_type, const gchar* modPath, const gchar* nick, const gchar* loader, QeteshWebServerContext* sc, gint execUser, gint execGroup, GError** error);
GType qetesh_http_request_get_type (void) G_GNUC_CONST;
void qetesh_app_module_Handle (QeteshAppModule* self, QeteshHTTPRequest* req);
GType qetesh_qweb_app_get_type (void) G_GNUC_CONST;
QeteshQWebApp* qetesh_app_module_GetApp (QeteshAppModule* self, GError** error);
GType qetesh_data_data_object_get_type (void) G_GNUC_CONST;
void qetesh_app_module_ExposeData (QeteshAppModule* self, GeeList* data);
const gchar* qetesh_app_module_get_Nick (QeteshAppModule* self);
QeteshQWebApp* qetesh_app_module_get_WebApp (QeteshAppModule* self);
QeteshWebAppContext* qetesh_app_module_get_Context (QeteshAppModule* self);
gint qetesh_app_module_get_ExecUser (QeteshAppModule* self);
gint qetesh_app_module_get_ExecGroup (QeteshAppModule* self);
GType qetesh_qplugin_get_type (void) G_GNUC_CONST;
QeteshQWebApp* qetesh_qplugin_GetModObject (QeteshQPlugin* self, QeteshWebAppContext* ctx);
GType qetesh_module_manager_get_type (void) G_GNUC_CONST;
QeteshModuleManager* qetesh_module_manager_new (QeteshWebServerContext* c);
QeteshModuleManager* qetesh_module_manager_construct (GType object_type, QeteshWebServerContext* c);
void qetesh_module_manager_LoadModules (QeteshModuleManager* self);
QeteshAppModule* qetesh_module_manager_GetHostModule (QeteshModuleManager* self, const gchar* host);
GType qetesh_config_file_get_type (void) G_GNUC_CONST;
#define QETESH_CONFIG_FILE_DCONFIG_FILE "/usr/local/etc/qetesh.conf"
#define QETESH_CONFIG_FILE_DCONFIG_DIR "/usr/local/etc/qetesh.conf.d"
QeteshConfigFile* qetesh_config_file_new (QeteshWebServerContext* sc);
QeteshConfigFile* qetesh_config_file_construct (GType object_type, QeteshWebServerContext* sc);
void qetesh_config_file_ReParse (QeteshConfigFile* self);
guint16 qetesh_config_file_get_ListenPort (QeteshConfigFile* self);
void qetesh_config_file_set_ListenPort (QeteshConfigFile* self, guint16 value);
gint qetesh_config_file_get_MaxThreads (QeteshConfigFile* self);
void qetesh_config_file_set_MaxThreads (QeteshConfigFile* self, gint value);
const gchar* qetesh_config_file_get_ListenAddr (QeteshConfigFile* self);
void qetesh_config_file_set_ListenAddr (QeteshConfigFile* self, const gchar* value);
const gchar* qetesh_config_file_get_LogFile (QeteshConfigFile* self);
void qetesh_config_file_set_LogFile (QeteshConfigFile* self, const gchar* value);
gint qetesh_config_file_get_LogLevel (QeteshConfigFile* self);
void qetesh_config_file_set_LogLevel (QeteshConfigFile* self, gint value);
gpointer qetesh_config_file_mod_config_ref (gpointer instance);
void qetesh_config_file_mod_config_unref (gpointer instance);
GParamSpec* qetesh_config_file_param_spec_mod_config (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void qetesh_config_file_value_set_mod_config (GValue* value, gpointer v_object);
void qetesh_config_file_value_take_mod_config (GValue* value, gpointer v_object);
gpointer qetesh_config_file_value_get_mod_config (const GValue* value);
GType qetesh_config_file_mod_config_get_type (void) G_GNUC_CONST;
GeeLinkedList* qetesh_config_file_get_Modules (QeteshConfigFile* self);
gpointer qetesh_config_file_db_config_ref (gpointer instance);
void qetesh_config_file_db_config_unref (gpointer instance);
GParamSpec* qetesh_config_file_param_spec_db_config (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void qetesh_config_file_value_set_db_config (GValue* value, gpointer v_object);
void qetesh_config_file_value_take_db_config (GValue* value, gpointer v_object);
gpointer qetesh_config_file_value_get_db_config (const GValue* value);
GType qetesh_config_file_db_config_get_type (void) G_GNUC_CONST;
GeeLinkedList* qetesh_config_file_get_Databases (QeteshConfigFile* self);
QeteshConfigFileModConfig* qetesh_config_file_mod_config_new (void);
QeteshConfigFileModConfig* qetesh_config_file_mod_config_construct (GType object_type);
QeteshConfigFileDBConfig* qetesh_config_file_db_config_new (void);
QeteshConfigFileDBConfig* qetesh_config_file_db_config_construct (GType object_type);
GType qetesh_config_file_parser_get_type (void) G_GNUC_CONST;
QeteshConfigFileParser* qetesh_config_file_parser_new (GDataInputStream* confFile, QeteshWebServerContext* sc);
QeteshConfigFileParser* qetesh_config_file_parser_construct (GType object_type, GDataInputStream* confFile, QeteshWebServerContext* sc);
void qetesh_config_file_parser_ReadInto (QeteshConfigFileParser* self, QeteshConfigFile* cfg);
GQuark qetesh_errors_qerror_quark (void);
GQuark qetesh_errors_qfile_error_quark (void);
GQuark qetesh_errors_qsanity_error_quark (void);
void qetesh_qevent_Fire (QeteshQEvent* self, QeteshHTTPRequest* req);
QeteshQEvent* qetesh_qevent_new (const gchar* type);
QeteshQEvent* qetesh_qevent_construct (GType object_type, const gchar* type);
QeteshHTTPRequest* qetesh_qevent_get_Request (QeteshQEvent* self);
const gchar* qetesh_qevent_get_ClientEventType (QeteshQEvent* self);
void qetesh_qevent_set_ClientEventType (QeteshQEvent* self, const gchar* value);
GType qetesh_http_request_request_method_get_type (void) G_GNUC_CONST;
QeteshHTTPRequest* qetesh_http_request_new (GSocketConnection* c, QeteshWebServerContext* sc);
QeteshHTTPRequest* qetesh_http_request_construct (GType object_type, GSocketConnection* c, QeteshWebServerContext* sc);
void qetesh_http_request_Handle (QeteshHTTPRequest* self);
void qetesh_http_request_Route (QeteshHTTPRequest* self, QeteshWebAppContext* cxt, QeteshHTTPResponse* resp);
void qetesh_http_request_Respond (QeteshHTTPRequest* self);
QeteshWebServerContext* qetesh_http_request_get_ServerContext (QeteshHTTPRequest* self);
QeteshWebAppContext* qetesh_http_request_get_AppContext (QeteshHTTPRequest* self);
GType qetesh_data_data_manager_get_type (void) G_GNUC_CONST;
QeteshDataDataManager* qetesh_http_request_get_Data (QeteshHTTPRequest* self);
QeteshHTTPRequestRequestMethod qetesh_http_request_get_Method (QeteshHTTPRequest* self);
const gchar* qetesh_http_request_get_FullPath (QeteshHTTPRequest* self);
const gchar* qetesh_http_request_get_Path (QeteshHTTPRequest* self);
guint16 qetesh_http_request_get_ServerRequestPort (QeteshHTTPRequest* self);
void qetesh_http_request_set_ServerRequestPort (QeteshHTTPRequest* self, guint16 value);
guint16 qetesh_http_request_get_RequestPort (QeteshHTTPRequest* self);
const gchar* qetesh_http_request_get_Host (QeteshHTTPRequest* self);
const gchar* qetesh_http_request_get_UserAgent (QeteshHTTPRequest* self);
GeeLinkedList* qetesh_http_request_get_PathArgs (QeteshHTTPRequest* self);
GeeMap* qetesh_http_request_get_Headers (QeteshHTTPRequest* self);
QeteshHTTPResponse* qetesh_http_request_get_HResponse (QeteshHTTPRequest* self);
QeteshDataDataObjectDataNode* qetesh_http_request_get_DataTree (QeteshHTTPRequest* self);
gpointer qetesh_data_qdatabase_conn_ref (gpointer instance);
void qetesh_data_qdatabase_conn_unref (gpointer instance);
GParamSpec* qetesh_data_param_spec_qdatabase_conn (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void qetesh_data_value_set_qdatabase_conn (GValue* value, gpointer v_object);
void qetesh_data_value_take_qdatabase_conn (GValue* value, gpointer v_object);
gpointer qetesh_data_value_get_qdatabase_conn (const GValue* value);
GType qetesh_data_qdatabase_conn_get_type (void) G_GNUC_CONST;
QeteshDataDataObject* qetesh_data_data_object_construct (GType object_type, GType timp_type, GBoxedCopyFunc timp_dup_func, GDestroyNotify timp_destroy_func, QeteshDataQDatabaseConn* dbh);
void qetesh_data_data_object_Init (QeteshDataDataObject* self);
void qetesh_data_data_object_Create (QeteshDataDataObject* self);
void qetesh_data_data_object_Delete (QeteshDataDataObject* self);
GQuark qetesh_data_qdb_error_quark (void);
GeeLinkedList* qetesh_data_data_object_LoadAll (QeteshDataDataObject* self, GError** error);
GeeLinkedList* qetesh_data_data_object_LazyLoadList (QeteshDataDataObject* self, const gchar* propertyName, GType fType);
void qetesh_data_data_object_Load (QeteshDataDataObject* self);
GeeLinkedList* qetesh_data_data_object_MapObjectList (QeteshDataDataObject* self, GeeLinkedList* rows);
QeteshDataDataObject* qetesh_data_data_object_CreateObject (QeteshDataDataObject* self, GeeTreeMap* datum);
gchar* qetesh_data_data_object_NameTransform (QeteshDataDataObject* self, const gchar* fieldName);
void qetesh_data_data_object_MapObject (QeteshDataDataObject* self, GeeTreeMap* datum);
QeteshDataDataObjectDataNode* qetesh_data_data_object_ToNode (QeteshDataDataObject* self, QeteshDataDataObjectDataNodeTransform transform, void* transform_target);
void qetesh_data_data_object_LazyLink (QeteshDataDataObject* self, const gchar* localProp, const gchar* remoteProp);
const gchar* qetesh_data_data_object_get_TableName (QeteshDataDataObject* self);
void qetesh_data_data_object_set_TableName (QeteshDataDataObject* self, const gchar* value);
const gchar* qetesh_data_data_object_get_PKeyName (QeteshDataDataObject* self);
void qetesh_data_data_object_set_PKeyName (QeteshDataDataObject* self, const gchar* value);
const gchar* qetesh_data_data_object_get_QueryTarget (QeteshDataDataObject* self);
GeeLinkedList* qetesh_data_data_object_get_Children (QeteshDataDataObject* self);
GeeLinkedList* qetesh_data_data_object_get_Parents (QeteshDataDataObject* self);
GType qetesh_qweb_node_get_type (void) G_GNUC_CONST;
gpointer qetesh_qweb_node_manifest_object_ref (gpointer instance);
void qetesh_qweb_node_manifest_object_unref (gpointer instance);
GParamSpec* qetesh_qweb_node_param_spec_manifest_object (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void qetesh_qweb_node_value_set_manifest_object (GValue* value, gpointer v_object);
void qetesh_qweb_node_value_take_manifest_object (GValue* value, gpointer v_object);
gpointer qetesh_qweb_node_value_get_manifest_object (const GValue* value);
GType qetesh_qweb_node_manifest_object_get_type (void) G_GNUC_CONST;
GType qetesh_data_data_object_lazy_node_get_type (void) G_GNUC_CONST;
QeteshDataDataObjectLazyNode* qetesh_data_data_object_lazy_node_new (void);
QeteshDataDataObjectLazyNode* qetesh_data_data_object_lazy_node_construct (GType object_type);
QeteshDataDataObjectDataNode* qetesh_data_data_object_data_node_new (const gchar* name, gboolean isArray);
QeteshDataDataObjectDataNode* qetesh_data_data_object_data_node_construct (GType object_type, const gchar* name, gboolean isArray);
const gchar* qetesh_data_data_object_data_node_get_Name (QeteshDataDataObjectDataNode* self);
void qetesh_data_data_object_data_node_set_Name (QeteshDataDataObjectDataNode* self, const gchar* value);
const gchar* qetesh_data_data_object_data_node_get_Val (QeteshDataDataObjectDataNode* self);
void qetesh_data_data_object_data_node_set_Val (QeteshDataDataObjectDataNode* self, const gchar* value);
GeeLinkedList* qetesh_data_data_object_data_node_get_Children (QeteshDataDataObjectDataNode* self);
gboolean qetesh_data_data_object_data_node_get_IsArray (QeteshDataDataObjectDataNode* self);
void qetesh_data_data_object_data_node_set_IsArray (QeteshDataDataObjectDataNode* self, gboolean value);
gpointer qetesh_data_data_object_inherit_info_ref (gpointer instance);
void qetesh_data_data_object_inherit_info_unref (gpointer instance);
GParamSpec* qetesh_data_data_object_param_spec_inherit_info (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void qetesh_data_data_object_value_set_inherit_info (GValue* value, gpointer v_object);
void qetesh_data_data_object_value_take_inherit_info (GValue* value, gpointer v_object);
gpointer qetesh_data_data_object_value_get_inherit_info (const GValue* value);
GType qetesh_data_data_object_inherit_info_get_type (void) G_GNUC_CONST;
GType qetesh_data_data_object_inherit_info_link_join_type_get_type (void) G_GNUC_CONST;
QeteshDataDataObjectInheritInfo* qetesh_data_data_object_inherit_info_new (void);
QeteshDataDataObjectInheritInfo* qetesh_data_data_object_inherit_info_construct (GType object_type);
const gchar* qetesh_data_data_object_inherit_info_get_ParentTableName (QeteshDataDataObjectInheritInfo* self);
void qetesh_data_data_object_inherit_info_set_ParentTableName (QeteshDataDataObjectInheritInfo* self, const gchar* value);
const gchar* qetesh_data_data_object_inherit_info_get_ParentTableKey (QeteshDataDataObjectInheritInfo* self);
void qetesh_data_data_object_inherit_info_set_ParentTableKey (QeteshDataDataObjectInheritInfo* self, const gchar* value);
const gchar* qetesh_data_data_object_inherit_info_get_LocalTableName (QeteshDataDataObjectInheritInfo* self);
void qetesh_data_data_object_inherit_info_set_LocalTableName (QeteshDataDataObjectInheritInfo* self, const gchar* value);
const gchar* qetesh_data_data_object_inherit_info_get_LocalTableKey (QeteshDataDataObjectInheritInfo* self);
void qetesh_data_data_object_inherit_info_set_LocalTableKey (QeteshDataDataObjectInheritInfo* self, const gchar* value);
GType qetesh_data_db_manager_get_type (void) G_GNUC_CONST;
QeteshDataDBManager* qetesh_data_db_manager_new (QeteshWebServerContext* sc);
QeteshDataDBManager* qetesh_data_db_manager_construct (GType object_type, QeteshWebServerContext* sc);
GType qetesh_data_qdatabase_get_type (void) G_GNUC_CONST;
QeteshDataQDatabaseConn* qetesh_data_qdatabase_Connect (QeteshDataQDatabase* self, GError** error);
QeteshDataQDatabase* qetesh_data_qdatabase_construct (GType object_type, QeteshConfigFileDBConfig* config, QeteshWebServerContext* sc);
QeteshConfigFileDBConfig* qetesh_data_qdatabase_get_Conf (QeteshDataQDatabase* self);
QeteshWebServerContext* qetesh_data_qdatabase_get_Context (QeteshDataQDatabase* self);
GType qetesh_data_qmysql_db_get_type (void) G_GNUC_CONST;
QeteshDataQMysqlDB* qetesh_data_qmysql_db_new (QeteshConfigFileDBConfig* config, QeteshWebServerContext* sc);
QeteshDataQMysqlDB* qetesh_data_qmysql_db_construct (GType object_type, QeteshConfigFileDBConfig* config, QeteshWebServerContext* sc);
GeeLinkedList* qetesh_data_qdatabase_conn_Q (QeteshDataQDatabaseConn* self, const gchar* qText, GError** error);
void qetesh_data_qdatabase_conn_Connect (QeteshDataQDatabaseConn* self, GError** error);
QeteshDataQDatabaseConn* qetesh_data_qdatabase_conn_construct (GType object_type);
gboolean qetesh_data_qdatabase_conn_get_IsConnected (QeteshDataQDatabaseConn* self);
void qetesh_data_qdatabase_conn_set_IsConnected (QeteshDataQDatabaseConn* self, gboolean value);
QeteshDataDataManager* qetesh_data_data_manager_new (QeteshDataDBManager* dbm);
QeteshDataDataManager* qetesh_data_data_manager_construct (GType object_type, QeteshDataDBManager* dbm);
QeteshDataQDatabaseConn* qetesh_data_data_manager_GetConnection (QeteshDataDataManager* self, const gchar* dbNick, GError** error);
QeteshWebServerContext* qetesh_web_server_context_new (void);
QeteshWebServerContext* qetesh_web_server_context_construct (GType object_type);
QeteshWebAppContext* qetesh_web_app_context_new (void);
QeteshWebAppContext* qetesh_web_app_context_construct (GType object_type);
QeteshAppModule* qetesh_web_app_context_get_Mod (QeteshWebAppContext* self);
void qetesh_web_app_context_set_Mod (QeteshWebAppContext* self, QeteshAppModule* value);
QeteshEventManager* qetesh_web_app_context_get_Events (QeteshWebAppContext* self);
void qetesh_web_app_context_set_Events (QeteshWebAppContext* self, QeteshEventManager* value);
QeteshWebServerContext* qetesh_web_app_context_get_Server (QeteshWebAppContext* self);
void qetesh_web_app_context_set_Server (QeteshWebAppContext* self, QeteshWebServerContext* value);
QeteshQWebApp* qetesh_qweb_app_new (QeteshWebAppContext* ctx);
QeteshQWebApp* qetesh_qweb_app_construct (GType object_type, QeteshWebAppContext* ctx);
void qetesh_qweb_app_WriteMessage (QeteshQWebApp* self, const gchar* message, QeteshErrorManagerQErrorClass errorClass, const gchar* modName);
GType qetesh_html_element_get_type (void) G_GNUC_CONST;
QeteshHTMLElement* qetesh_html_element_get (QeteshHTMLElement* self, const gchar* selector);
QeteshHTMLElement* qetesh_html_element_Propogate (QeteshHTMLElement* self);
QeteshHTMLElement* qetesh_html_element_Replicate (QeteshHTMLElement* self, gint copies);
void qetesh_html_element_Attach (QeteshHTMLElement* self, QeteshQEvent* ev);
const gchar* qetesh_html_element_get_Content (QeteshHTMLElement* self);
void qetesh_html_element_set_Content (QeteshHTMLElement* self, const gchar* value);
const gchar* qetesh_html_element_get_Val (QeteshHTMLElement* self);
void qetesh_html_element_set_Val (QeteshHTMLElement* self, const gchar* value);
gint qetesh_html_element_get_size (QeteshHTMLElement* self);
const gchar* qetesh_html_element_get_Selector (QeteshHTMLElement* self);
void qetesh_html_element_set_Selector (QeteshHTMLElement* self, const gchar* value);
QeteshQWebNode* qetesh_qweb_node_get (QeteshQWebNode* self, const gchar* subpath);
void qetesh_qweb_node_set (QeteshQWebNode* self, const gchar* subpath, QeteshQWebNode* node);
void qetesh_qweb_node_OnBind (QeteshQWebNode* self);
QeteshQWebNode* qetesh_qweb_node_new (const gchar* path);
QeteshQWebNode* qetesh_qweb_node_construct (GType object_type, const gchar* path);
gchar* qetesh_qweb_node_GetFullPath (QeteshQWebNode* self);
gpointer qetesh_qweb_node_lazy_exposer_ref (gpointer instance);
void qetesh_qweb_node_lazy_exposer_unref (gpointer instance);
GParamSpec* qetesh_qweb_node_param_spec_lazy_exposer (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void qetesh_qweb_node_value_set_lazy_exposer (GValue* value, gpointer v_object);
void qetesh_qweb_node_value_take_lazy_exposer (GValue* value, gpointer v_object);
gpointer qetesh_qweb_node_value_get_lazy_exposer (const GValue* value);
GType qetesh_qweb_node_lazy_exposer_get_type (void) G_GNUC_CONST;
QeteshQWebNodeLazyExposer* qetesh_qweb_node_ExposeCrud (QeteshQWebNode* self, const gchar* typeName, GType typ, const gchar* dbName);
gpointer qetesh_qweb_node_manifest_walker_ref (gpointer instance);
void qetesh_qweb_node_manifest_walker_unref (gpointer instance);
GParamSpec* qetesh_qweb_node_param_spec_manifest_walker (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void qetesh_qweb_node_value_set_manifest_walker (GValue* value, gpointer v_object);
void qetesh_qweb_node_value_take_manifest_walker (GValue* value, gpointer v_object);
gpointer qetesh_qweb_node_value_get_manifest_walker (const GValue* value);
GType qetesh_qweb_node_manifest_walker_get_type (void) G_GNUC_CONST;
void qetesh_qweb_node_WalkManifests (QeteshQWebNode* self, QeteshQWebNodeManifestWalker* walker);
gint qetesh_qweb_node_get_size (QeteshQWebNode* self);
const gchar* qetesh_qweb_node_get_Path (QeteshQWebNode* self);
void qetesh_qweb_node_set_Path (QeteshQWebNode* self, const gchar* value);
QeteshQWebNodeLazyExposer* qetesh_qweb_node_lazy_exposer_Lazy (QeteshQWebNodeLazyExposer* self, const gchar* propertyName, GType fType, const gchar* returnType);
QeteshQWebNodeManifestWalker* qetesh_qweb_node_manifest_walker_new (QeteshDataDataObjectDataNode* rNode);
QeteshQWebNodeManifestWalker* qetesh_qweb_node_manifest_walker_construct (GType object_type, QeteshDataDataObjectDataNode* rNode);
QeteshDataDataObjectDataNode* qetesh_qweb_node_manifest_walker_AddObject (QeteshQWebNodeManifestWalker* self, const gchar* tName);
gpointer qetesh_qweb_node_manifest_object_manifest_method_ref (gpointer instance);
void qetesh_qweb_node_manifest_object_manifest_method_unref (gpointer instance);
GParamSpec* qetesh_qweb_node_manifest_object_param_spec_manifest_method (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void qetesh_qweb_node_manifest_object_value_set_manifest_method (GValue* value, gpointer v_object);
void qetesh_qweb_node_manifest_object_value_take_manifest_method (GValue* value, gpointer v_object);
gpointer qetesh_qweb_node_manifest_object_value_get_manifest_method (const GValue* value);
GType qetesh_qweb_node_manifest_object_manifest_method_get_type (void) G_GNUC_CONST;
QeteshQWebNodeManifestObject* qetesh_qweb_node_manifest_object_new (const gchar* typeName);
QeteshQWebNodeManifestObject* qetesh_qweb_node_manifest_object_construct (GType object_type, const gchar* typeName);
QeteshQWebNodeManifestObjectManifestMethod* qetesh_qweb_node_manifest_object_Method (QeteshQWebNodeManifestObject* self, const gchar* mName, const gchar* mType, QeteshQWebNode* node);
QeteshQWebNodeManifestObjectManifestMethod* qetesh_qweb_node_manifest_object_LazyLink (QeteshQWebNodeManifestObject* self, const gchar* mName, const gchar* mType, QeteshQWebNode* node);
const gchar* qetesh_qweb_node_manifest_object_get_TypeName (QeteshQWebNodeManifestObject* self);
QeteshQWebNodeManifestObjectManifestMethod* qetesh_qweb_node_manifest_object_manifest_method_new (const gchar* name, const gchar* path, const gchar* mType, const gchar* rType);
QeteshQWebNodeManifestObjectManifestMethod* qetesh_qweb_node_manifest_object_manifest_method_construct (GType object_type, const gchar* name, const gchar* path, const gchar* mType, const gchar* rType);
QeteshDataDataObjectDataNode* qetesh_qweb_node_manifest_object_manifest_method_GetDescriptor (QeteshQWebNodeManifestObjectManifestMethod* self);
void qetesh_qweb_node_manifest_object_manifest_method_GET (QeteshQWebNodeManifestObjectManifestMethod* self);
void qetesh_qweb_node_manifest_object_manifest_method_POST (QeteshQWebNodeManifestObjectManifestMethod* self);
void qetesh_qweb_node_manifest_object_manifest_method_PUT (QeteshQWebNodeManifestObjectManifestMethod* self);
const gchar* qetesh_qweb_node_manifest_object_manifest_method_get_Name (QeteshQWebNodeManifestObjectManifestMethod* self);
void qetesh_qweb_node_manifest_object_manifest_method_set_Name (QeteshQWebNodeManifestObjectManifestMethod* self, const gchar* value);
const gchar* qetesh_qweb_node_manifest_object_manifest_method_get_NodePath (QeteshQWebNodeManifestObjectManifestMethod* self);
void qetesh_qweb_node_manifest_object_manifest_method_set_NodePath (QeteshQWebNodeManifestObjectManifestMethod* self, const gchar* value);
const gchar* qetesh_qweb_node_manifest_object_manifest_method_get_HttpMethod (QeteshQWebNodeManifestObjectManifestMethod* self);
const gchar* qetesh_qweb_node_manifest_object_manifest_method_get_MethodType (QeteshQWebNodeManifestObjectManifestMethod* self);
const gchar* qetesh_qweb_node_manifest_object_manifest_method_get_ReturnType (QeteshQWebNodeManifestObjectManifestMethod* self);
GType qetesh_qmanifest_get_type (void) G_GNUC_CONST;
QeteshQManifest* qetesh_qmanifest_new (void);
QeteshQManifest* qetesh_qmanifest_construct (GType object_type);
GType qetesh_qdate_time_get_type (void) G_GNUC_CONST;
QeteshQDateTime* qetesh_qdate_time_new (void);
QeteshQDateTime* qetesh_qdate_time_construct (GType object_type);
void qetesh_qdate_time_fromString (QeteshQDateTime* self, const gchar* inVal);
gchar* qetesh_qdate_time_toString (QeteshQDateTime* self);


G_END_DECLS

#endif
